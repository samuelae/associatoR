[{"path":"http://samuelaeschbach.com/associatoR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Samuel Aeschbach. Author, maintainer. Dirk U. Wulff. Author. Rui Mata. Contributor.","code":""},{"path":"http://samuelaeschbach.com/associatoR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aeschbach S, Wulff DU (2024). associatoR: Analyzing association data. R package version 0.1.0.9, https://CRAN.R-project.org/package=associatoR.","code":"@Manual{,   title = {associatoR: Analyzing association data},   author = {Samuel Aeschbach and Dirk U. Wulff},   year = {2024},   note = {R package version 0.1.0.9},   url = {https://CRAN.R-project.org/package=associatoR}, }"},{"path":"http://samuelaeschbach.com/associatoR/index.html","id":"associator","dir":"","previous_headings":"","what":"Analyzing association data","title":"Analyzing association data","text":"Associations offer window semantics mind, revealing concepts words interconnected. interesting applications psychological theory also practical uses marketing research, sociology, education, artificial intelligence. associatoR R package work association data. offers pipelines import, normalize, process, analyze, convey results.","code":""},{"path":"http://samuelaeschbach.com/associatoR/index.html","id":"general-information","dir":"","previous_headings":"","what":"General Information","title":"Analyzing association data","text":"associatoR package developed Samuel Aeschbach Dirk U. Wulff.","code":""},{"path":"http://samuelaeschbach.com/associatoR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyzing association data","text":"latest development version GitHub can installed via devtools::install_github(\"samuelae/associatoR\"). Note requires prior installation devtools package can achieved running install.packages(\"devtools\") R.","code":""},{"path":"http://samuelaeschbach.com/associatoR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Analyzing association data","text":"prototypical workflow using functions associatoR package.","code":"data %>%    ar_import(...) %>%    ar_set_targets(...) %>%    ar_embed(...) %>%    ar_plot(...)"},{"path":"http://samuelaeschbach.com/associatoR/index.html","id":"workflow","dir":"","previous_headings":"","what":"Workflow","title":"Analyzing association data","text":"Detailed descriptions can found package website. includes function reference.","code":"flowchart TD     DATA(free association data) --> IMPORT[\"ar_import()\"]     IMPORT --> OBJ(\"associatoR Object \\n [cues, participants, responses]\")     IMPORT --> NORM[\"ar_normalize()\"] --> OBJ     IMPORT --> NORMM[\"ar_normalize_manual()\"] --> OBJ      OBJ <--> SUB[\"ar_subset()\"]      OBJ --> SET[\"ar_set_targets()\"]      SET --> OBJT(\"associatoR Object \\n [cues, participants, responses, targets]\")      OBJT <--> COUNT[\"ar_count_targets()\"]     OBJT <--> CHAR[\"ar_characterize_targets()\"]      OBJT --> EMBED[\"ar_embed()\"]     EMBED --> OBJTE(\"associatoR Object \\n [cues, participants, responses, targets, target_embedding]\")      OBJTE <--> PROJ[\"ar_project()\"]      COMP[\"ar_compare()\"]     OBJ <--> COMP     OBJT <--> COMP     OBJTE <--> COMP      CORR[\"ar_correlate()\"]     OBJ <--> CORR     OBJT <--> CORR     OBJTE <--> CORR          PRINT[\"print(associatoR Object)\"]     OBJ --> PRINT     OBJT --> PRINT     OBJTE --> PRINT      CSV[\"ar_write_csv()\"]     OBJ --> CSV     OBJT --> CSV     OBJTE --> CSV"},{"path":"http://samuelaeschbach.com/associatoR/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Analyzing association data","text":"Aeschbach, S., Wulff, D. U. (2023). associatoR. https://github.com/samuelae/associatoR","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_characterize_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Characterize targets using additional resources — ar_characterize_targets","title":"Characterize targets using additional resources — ar_characterize_targets","text":"Append target characteristics targets table associatoR object. Use pre-defined characteristics psycho-linguistic research supply data.frame user-defined look-table.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_characterize_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Characterize targets using additional resources — ar_characterize_targets","text":"","code":"ar_characterize_targets(   associations,   characteristics = c(\"valence\", \"arousal\", \"dominance\", \"concreteness\",     \"word_frequency\") )"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_characterize_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Characterize targets using additional resources — ar_characterize_targets","text":"associations associatoR object containing association data generated ar_import. characteristics character string vector specifying characteristic(s) containing one c(\"valence\", \"arousal\", \"dominance\", \"concreteness\", \"word_frequency\") data.frame containing characteristics. data.frame must contain column word serve look key may contain additional columns word characteristics.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_characterize_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Characterize targets using additional resources — ar_characterize_targets","text":"Returns associatoR object containing list tibbles, targets gaining additional columns including target characteristics: participants tibble participants including participant id potential participant attributes. cues tibble cues including cue variable potential cue attributes. responses tibble responses including participant id, cues, responses, response level, additional response attributes. targets tibble targets including specified analysis targets, word characteristics","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_characterize_targets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Characterize targets using additional resources — ar_characterize_targets","text":"Data valence, arousal, dominance retrieved Warriner et al. (2013). Concreteness word frequency data retrieved Brysbaert et al. (2014).","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_characterize_targets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Characterize targets using additional resources — ar_characterize_targets","text":"Warriner, . B., Kuperman, V., & Brysbaert, M. (2013). Norms valence, arousal, dominance 13,915 English lemmas. Behavior Research Methods, 45(4), 1191–1207. https://doi.org/10.3758/s13428-012-0314-x Brysbaert, M., Warriner, . B., & Kuperman, V. (2014). Concreteness ratings 40 thousand generally known English word lemmas. Behavior Research Methods, 46(3), 904–911. https://doi.org/10.3758/s13428-013-0403-5","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_characterize_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Characterize targets using additional resources — ar_characterize_targets","text":"","code":"ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") %>%   ar_characterize_targets() #>  #> ── An associatoR object ──────────────────────────────────────────────────────── #>  #> participants #> # A tibble: 1,000 × 3 #>      id gender education   #>   <dbl> <chr>  <chr>       #> 1     1 female high school #> 2     2 female high school #> 3     3 female high school #> 4     4 female high school #> 5     5 female high school #> # ℹ 995 more rows #>  #> cues #> # A tibble: 359 × 1 #>   cue          #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>  #> responses #> # A tibble: 29,820 × 5 #>      id cue          response  response_position response_level #>   <dbl> <chr>        <chr>                 <dbl>          <dbl> #> 1     1 intelligence brain                     1              1 #> 2     1 intelligence knowledge                 2              1 #> 3     1 intelligence wisdom                    3              1 #> 4     1 intelligence iq                        4              1 #> 5     1 intelligence learning                  5              1 #> # ℹ 29,815 more rows #>  #> targets #> # A tibble: 359 × 6 #>   target       valence arousal dominance concreteness word_frequency #>   <chr>          <dbl>   <dbl>     <dbl>        <dbl>          <dbl> #> 1 intelligence    7.65    6.32      6.72         2.24            983 #> 2 brain           6.22    3.35      6.28         4.69           3928 #> 3 knowledge       7.28    4.86      7.2          1.73           1302 #> 4 wisdom          7.94    3.77      7.14         1.53            565 #> 5 iq             NA      NA        NA           NA                NA #> # ℹ 354 more rows #>   ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") %>%   ar_characterize_targets(characteristics = data.frame(word = c(\"intelligence\", \"brain\"),                                                        message = c(\"Hello\", \"World\"))) #>  #> ── An associatoR object ──────────────────────────────────────────────────────── #>  #> participants #> # A tibble: 1,000 × 3 #>      id gender education   #>   <dbl> <chr>  <chr>       #> 1     1 female high school #> 2     2 female high school #> 3     3 female high school #> 4     4 female high school #> 5     5 female high school #> # ℹ 995 more rows #>  #> cues #> # A tibble: 359 × 1 #>   cue          #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>  #> responses #> # A tibble: 29,820 × 5 #>      id cue          response  response_position response_level #>   <dbl> <chr>        <chr>                 <dbl>          <dbl> #> 1     1 intelligence brain                     1              1 #> 2     1 intelligence knowledge                 2              1 #> 3     1 intelligence wisdom                    3              1 #> 4     1 intelligence iq                        4              1 #> 5     1 intelligence learning                  5              1 #> # ℹ 29,815 more rows #>  #> targets #> # A tibble: 359 × 2 #>   target       message #>   <chr>        <chr>   #> 1 intelligence Hello   #> 2 brain        World   #> 3 knowledge    NA      #> 4 wisdom       NA      #> 5 iq           NA      #> # ℹ 354 more rows #>"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cluster_stability.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster stability — ar_cluster_stability","title":"Cluster stability — ar_cluster_stability","text":"ar_cluster_stability evaluates stability clustering generated ar_cluster_targets()","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cluster_stability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster stability — ar_cluster_stability","text":"","code":"ar_cluster_stability(associations, n_boot = 1000, unique = FALSE)"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cluster_stability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster stability — ar_cluster_stability","text":"associations associatoR object including target_embeddings. n_boot integer specifying number bootstrap samples draw. Default 1000. unique logical specifying whether duplicate targets bootstrap shouod ignored. Default TRUE.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cluster_stability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster stability — ar_cluster_stability","text":"function returns list containing two matrices target- (target_stability) cluster-wise (cluster_stability) probabilities assigned cluster random pertubation.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cluster_stability.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cluster stability — ar_cluster_stability","text":"Clustering stability calculated identical clustering settings (e.g., clustering algorithm, similarity function, etc.) used generate original cluster assignment. information stored attribute targets table name \"cluster_settings\".","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cluster_stability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster stability — ar_cluster_stability","text":"","code":"ar_obj = ar_import(intelligence,                    participant = participant_id,                    cue = cue,                    response = response,                    participant_vars = c(gender, education),                    response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") %>%   ar_embed_targets() %>%   ar_cluster_targets(method = \"louvain\") #> Warning: 104 targets with count < min_count were dropped from embedding. #> Warning: all singular values are requested, svd() is used instead  ar_cluster_stability(ar_obj, n_boot = 10) #> Error in loadNamespace(x): there is no package called ‘progress’"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cluster_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster targets — ar_cluster_targets","title":"Cluster targets — ar_cluster_targets","text":"ar_cluster_targets produces target clustering based associatoR object's target embedding.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cluster_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster targets — ar_cluster_targets","text":"","code":"ar_cluster_targets(   associations,   method = \"louvain\",   similarity = \"arccos\",   k = NULL,   linkage = NULL,   eps = NULL,   ... )"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cluster_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster targets — ar_cluster_targets","text":"associations associatoR object including target_embeddings. method character specifying clustering method. One c(\"louvain\", \"hclust\", \"kmeans\", \"dbscan\"). Default \"louvain\". similarity character specifying similarity metric. One c(\"arccos\", \"cosine\", \"euclidean\"). Default \"arccos\". k integer specifying number clusters method = c(\"hclust\", \"kmeans\"). linkage character specifying linkage criterion method = c(\"hclust\"). Default \"complete\". eps numeric specifying point distance used method = c(\"dbscan\"). ... additional attributes passed clustering method.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cluster_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster targets — ar_cluster_targets","text":"function returns associatoR object including new  clusters column targets containing target clusters.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cluster_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster targets — ar_cluster_targets","text":"","code":"ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") %>%   ar_embed_targets() %>%   ar_cluster_targets(method = \"louvain\") #> Warning: 104 targets with count < min_count were dropped from embedding. #> Warning: all singular values are requested, svd() is used instead #>  #> ── An associatoR object ──────────────────────────────────────────────────────── #>  #> participants #> # A tibble: 1,000 × 3 #>      id gender education   #>   <dbl> <chr>  <chr>       #> 1     1 female high school #> 2     2 female high school #> 3     3 female high school #> 4     4 female high school #> 5     5 female high school #> # ℹ 995 more rows #>  #> cues #> # A tibble: 359 × 1 #>   cue          #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>  #> responses #> # A tibble: 29,820 × 5 #>      id cue          response  response_position response_level #>   <dbl> <chr>        <chr>                 <dbl>          <dbl> #> 1     1 intelligence brain                     1              1 #> 2     1 intelligence knowledge                 2              1 #> 3     1 intelligence wisdom                    3              1 #> 4     1 intelligence iq                        4              1 #> 5     1 intelligence learning                  5              1 #> # ℹ 29,815 more rows #>  #> targets #> # A tibble: 359 × 2 #>   target       cluster   #>   <chr>        <chr>     #> 1 intelligence cluster_1 #> 2 brain        cluster_2 #> 3 knowledge    cluster_3 #> 4 wisdom       cluster_2 #> 5 iq           cluster_2 #> # ℹ 354 more rows #>  #> target_embedding #> # A tibble: 255 × 256 #>   target      dim_1  dim_2   dim_3  dim_4  dim_5   dim_6 dim_7   dim_8 #>   <chr>       <dbl>  <dbl>   <dbl>  <dbl>  <dbl>   <dbl> <dbl>   <dbl> #> 1 intelligen… -4.31  0.841 -0.244  -0.253  0.515   0.376  1.51  -0.732 #> 2 brain       -5.58 -4.55  -1.50   -5.54   8.14   14.0    8.68   5.47  #> 3 knowledge   -6.43 -1.88   1.40    7.17  -2.78    3.22   1.43   0.274 #> 4 wisdom      -6.92 -1.42  -0.0408  3.92   4.47    2.63  -3.88  -0.942 #> 5 iq          -7.21 -2.86   1.64   -2.56   4.54  -10.7   18.8  -10.4   #> # ℹ 250 more rows #> # ℹ 247 more variables: dim_9 <dbl>, dim_10 <dbl>, dim_11 <dbl>, #> #   dim_12 <dbl>, dim_13 <dbl>, dim_14 <dbl>, dim_15 <dbl>, #> #   dim_16 <dbl>, dim_17 <dbl>, dim_18 <dbl>, dim_19 <dbl>, #> #   dim_20 <dbl>, dim_21 <dbl>, dim_22 <dbl>, dim_23 <dbl>, #> #   dim_24 <dbl>, dim_25 <dbl>, dim_26 <dbl>, dim_27 <dbl>, #> #   dim_28 <dbl>, dim_29 <dbl>, dim_30 <dbl>, dim_31 <dbl>, … #>"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_compare_embeddings.html","id":null,"dir":"Reference","previous_headings":"","what":"Embedding similarity comparison — ar_compare_embeddings","title":"Embedding similarity comparison — ar_compare_embeddings","text":"ar_compare_embeddings compares embeddings groups using representational similarity analysis","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_compare_embeddings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Embedding similarity comparison — ar_compare_embeddings","text":"","code":"ar_compare_embeddings(   associations,   participant_vars,   type = \"triangle\",   intersection = \"pair\",   ... )"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_compare_embeddings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Embedding similarity comparison — ar_compare_embeddings","text":"associations associatoR object including target_embeddings. participant_vars one column names specifying grouping variables embedding comparisons. type character specifying whether compute representational similarity based full \"triangle\" \"row\"-wise. Default \"triangle\". intersection character specifying whether compute representations set targets shared groups (\"\") individual pair (\"pair\"). default (\"pair\"). ... arguments passed ar_embed_targets. arguments specified arguments taken existing target_embedding based default values.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_compare_embeddings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Embedding similarity comparison — ar_compare_embeddings","text":"function returns table representation similarities.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_compare_embeddings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Embedding similarity comparison — ar_compare_embeddings","text":"Representational similarity calculated based Spearman correlation cosine similarity matrices extracted embedding specified one grouping factors.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_compare_embeddings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Embedding similarity comparison — ar_compare_embeddings","text":"","code":"ar_obj = ar_import(intelligence,                    participant = participant_id,                    cue = cue,                    response = response,                    participant_vars = c(gender, education),                    response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") %>%   ar_embed_targets() #> Warning: 104 targets with count < min_count were dropped from embedding. #> Warning: all singular values are requested, svd() is used instead  ar_compare_embeddings(ar_obj, c(gender, education)) #> # A tibble: 6 × 6 #>   group_i            group_j       targets_i targets_j targets_shared similarity #>   <chr>              <chr>             <dbl>     <dbl>          <dbl>      <dbl> #> 1 female-high school male-high sc…       114       117             87      0.540 #> 2 female-high school female-unive…       114       125             93      0.519 #> 3 female-high school male-univers…       114       119             84      0.496 #> 4 male-high school   female-unive…       117       125             97      0.505 #> 5 male-high school   male-univers…       117       119             88      0.555 #> 6 female-university  male-univers…       125       119             95      0.503"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_compare_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare target characteristics between participant groups — ar_compare_targets","title":"Compare target characteristics between participant groups — ar_compare_targets","text":"ar_compare_targets compares target characteristics participant groups taking account target frequencies responses return summary statistics.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_compare_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare target characteristics between participant groups — ar_compare_targets","text":"","code":"ar_compare_targets(associations, participant_vars, target_var, fun = mean, ...)"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_compare_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare target characteristics between participant groups — ar_compare_targets","text":"associations associatoR object containing association data generated ar_import targets defined ar_set_targets. participant_vars variable name vector specifying grouping variables. target_var variable name specifying target variable summarized. fun function specifying statistic calculate target_var, defaults mean. ... additional arguments passed fun","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_compare_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare target characteristics between participant groups — ar_compare_targets","text":"Returns tibble containing grouped summaries based fun.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_compare_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare target characteristics between participant groups — ar_compare_targets","text":"","code":"# calculate means by using fun = mean and passing na.rm argument to mean() ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") %>%   ar_summarize_targets(response_var = response_position) %>%   ar_compare_targets(participant_vars = c(gender, education), target_var = response_position, fun = mean, na.rm = TRUE) #> # A tibble: 4 × 3 #>   gender education   response_position #>   <chr>  <chr>                   <dbl> #> 1 female high school              2.98 #> 2 female university               2.98 #> 3 male   high school              2.95 #> 4 male   university               2.97"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_correlate_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlate targets responses with participant variables — ar_correlate_targets","title":"Correlate targets responses with participant variables — ar_correlate_targets","text":"ar_correlate_targets calculates correlations response occurrence targets participant variables, gender age.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_correlate_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlate targets responses with participant variables — ar_correlate_targets","text":"","code":"ar_correlate_targets(associations, participant_vars, metric = \"auto\")"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_correlate_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlate targets responses with participant variables — ar_correlate_targets","text":"associations associatoR object containing association data generated ar_import. participant_vars character vector specifying participant variables assess. variables must exist associations$participants. metric character scalar c(\"auto\", \"point-biserial\", \"phi\", \"cramer\") specifying metric calculate correlation participant_vars targets. Defaults \"auto\".","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_correlate_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlate targets responses with participant variables — ar_correlate_targets","text":"Returns associatoR object containing list tibbles, targets gaining correlation column(s): participants tibble participants including participant id potential participant attributes. cues tibble cues including cue variable potential cue attributes. responses tibble responses including participant id, cues, responses, response level, additional response attributes. targets tibble targets including specified analysis target, correlation column(s).","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_correlate_targets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correlate targets responses with participant variables — ar_correlate_targets","text":"Function calculates point-biserial correlation numeric Cramer's V categorical participant_vars.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_correlate_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlate targets responses with participant variables — ar_correlate_targets","text":"","code":"ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") %>%   ar_correlate_targets(participant_vars = c(education, gender)) #> Joining with `by = join_by(target)` #>  #> ── An associatoR object ──────────────────────────────────────────────────────── #>  #> participants #> # A tibble: 1,000 × 3 #>      id gender education   #>   <dbl> <chr>  <chr>       #> 1     1 female high school #> 2     2 female high school #> 3     3 female high school #> 4     4 female high school #> 5     5 female high school #> # ℹ 995 more rows #>  #> cues #> # A tibble: 359 × 1 #>   cue          #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>  #> responses #> # A tibble: 29,820 × 5 #>      id cue          response  response_position response_level #>   <dbl> <chr>        <chr>                 <dbl>          <dbl> #> 1     1 intelligence brain                     1              1 #> 2     1 intelligence knowledge                 2              1 #> 3     1 intelligence wisdom                    3              1 #> 4     1 intelligence iq                        4              1 #> 5     1 intelligence learning                  5              1 #> # ℹ 29,815 more rows #>  #> targets #> # A tibble: 359 × 3 #>   target       education_corr gender_corr #>   <chr>                 <dbl>       <dbl> #> 1 intelligence        -0.0248    -0.0113  #> 2 brain               -0.0109     0.0271  #> 3 knowledge           -0.0350    -0.0175  #> 4 wisdom               0.0290    -0.0290  #> 5 iq                  -0.0121     0.00603 #> # ℹ 354 more rows #>"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_count_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Count target occurrences in responses — ar_count_targets","title":"Count target occurrences in responses — ar_count_targets","text":"Append response frequency target targets table associatoR object.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_count_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count target occurrences in responses — ar_count_targets","text":"","code":"ar_count_targets(associations, ...)"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_count_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count target occurrences in responses — ar_count_targets","text":"associations associatoR object containing association data generated ar_import. ... optional logical comparisons filtering responses computing frequencies.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_count_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count target occurrences in responses — ar_count_targets","text":"Returns associatoR object containing list tibbles, targets gaining frequency column: participants tibble participants including participant id potential participant attributes. cues tibble cues including cue variable potential cue attributes. responses tibble responses including participant id, cues, responses, response level, additional response attributes. targets tibble targets including column `frequency` containing counts target responses.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_count_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count target occurrences in responses — ar_count_targets","text":"","code":"ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") %>%   ar_count_targets() #>  #> ── An associatoR object ──────────────────────────────────────────────────────── #>  #> participants #> # A tibble: 1,000 × 3 #>      id gender education   #>   <dbl> <chr>  <chr>       #> 1     1 female high school #> 2     2 female high school #> 3     3 female high school #> 4     4 female high school #> 5     5 female high school #> # ℹ 995 more rows #>  #> cues #> # A tibble: 359 × 1 #>   cue          #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>  #> responses #> # A tibble: 29,820 × 5 #>      id cue          response  response_position response_level #>   <dbl> <chr>        <chr>                 <dbl>          <dbl> #> 1     1 intelligence brain                     1              1 #> 2     1 intelligence knowledge                 2              1 #> 3     1 intelligence wisdom                    3              1 #> 4     1 intelligence iq                        4              1 #> 5     1 intelligence learning                  5              1 #> # ℹ 29,815 more rows #>  #> targets #> # A tibble: 359 × 2 #>   target       frequency #>   <chr>            <dbl> #> 1 intelligence       310 #> 2 brain              178 #> 3 knowledge          338 #> 4 wisdom             242 #> 5 iq                 132 #> # ℹ 354 more rows #>   ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") %>%   ar_count_targets(response_position == 1) #>  #> ── An associatoR object ──────────────────────────────────────────────────────── #>  #> participants #> # A tibble: 1,000 × 3 #>      id gender education   #>   <dbl> <chr>  <chr>       #> 1     1 female high school #> 2     2 female high school #> 3     3 female high school #> 4     4 female high school #> 5     5 female high school #> # ℹ 995 more rows #>  #> cues #> # A tibble: 359 × 1 #>   cue          #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>  #> responses #> # A tibble: 29,820 × 5 #>      id cue          response  response_position response_level #>   <dbl> <chr>        <chr>                 <dbl>          <dbl> #> 1     1 intelligence brain                     1              1 #> 2     1 intelligence knowledge                 2              1 #> 3     1 intelligence wisdom                    3              1 #> 4     1 intelligence iq                        4              1 #> 5     1 intelligence learning                  5              1 #> # ℹ 29,815 more rows #>  #> targets #> # A tibble: 359 × 2 #>   target       frequency #>   <chr>            <dbl> #> 1 intelligence        64 #> 2 brain              121 #> 3 knowledge           64 #> 4 wisdom              46 #> 5 iq                  62 #> # ℹ 354 more rows #>"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cross_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Create participant-targets cross tables — ar_cross_targets","title":"Create participant-targets cross tables — ar_cross_targets","text":"ar_cross_targets creates tables counting targets among responses, combination participant varable groups seperately.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cross_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create participant-targets cross tables — ar_cross_targets","text":"","code":"ar_cross_targets(associations, participant_vars, target_var, normalize = FALSE)"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cross_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create participant-targets cross tables — ar_cross_targets","text":"associations associatoR object containing association data generated ar_import targets defined ar_set_targets. participant_vars variable name vector specifying participant varables group counts . target_var variable name specifying targets variable group counts . normalize logical scalar, indicating counts normalized participant varable groups. Defaults FALSE.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cross_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create participant-targets cross tables — ar_cross_targets","text":"Returns tibble containing grouped counts, grouped counts normalized within participant variable groups normalize = TRUE.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_cross_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create participant-targets cross tables — ar_cross_targets","text":"","code":"# one participant variable, no normalization ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") %>%   ar_embed_targets() %>%   ar_cluster_targets() %>%   ar_cross_targets(participant_vars = gender, target_var = cluster) #> Warning: 104 targets with count < min_count were dropped from embedding. #> Warning: all singular values are requested, svd() is used instead #> # A tibble: 10 × 3 #>    gender cluster        n #>    <chr>  <chr>      <int> #>  1 female cluster_1   2157 #>  2 female cluster_2   1423 #>  3 female cluster_3    895 #>  4 female cluster_4   3393 #>  5 female no_cluster   672 #>  6 male   cluster_1   1915 #>  7 male   cluster_2   1624 #>  8 male   cluster_3    868 #>  9 male   cluster_4   3315 #> 10 male   no_cluster   681  # two participant variables, normalized ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") %>%   ar_embed_targets() %>%   ar_cluster_targets() %>%   ar_cross_targets(participant_vars = c(gender, education), target_var = cluster, normalize = TRUE) #> Warning: 104 targets with count < min_count were dropped from embedding. #> Warning: all singular values are requested, svd() is used instead #> # A tibble: 20 × 4 #>    gender education   cluster    proportion #>    <chr>  <chr>       <chr>           <dbl> #>  1 female high school cluster_1      0.148  #>  2 female high school cluster_2      0.296  #>  3 female high school cluster_3      0.101  #>  4 female high school cluster_4      0.379  #>  5 female high school no_cluster     0.0756 #>  6 female university  cluster_1      0.122  #>  7 female university  cluster_2      0.305  #>  8 female university  cluster_3      0.0916 #>  9 female university  cluster_4      0.399  #> 10 female university  no_cluster     0.0817 #> 11 male   high school cluster_1      0.131  #> 12 male   high school cluster_2      0.313  #> 13 male   high school cluster_3      0.108  #> 14 male   high school cluster_4      0.372  #> 15 male   high school no_cluster     0.0771 #> 16 male   university  cluster_1      0.110  #> 17 male   university  cluster_2      0.316  #> 18 male   university  cluster_3      0.0843 #> 19 male   university  cluster_4      0.405  #> 20 male   university  no_cluster     0.0848"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_embed_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Embed associations — ar_embed_targets","title":"Embed associations — ar_embed_targets","text":"ar_embed_targets generates target embeddings.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_embed_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Embed associations — ar_embed_targets","text":"","code":"ar_embed_targets(   associations,   method = \"ppmi-svd\",   min_count = 5,   n_dim = 300,   model = NULL,   token = NULL,   context = NULL )"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_embed_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Embed associations — ar_embed_targets","text":"associations associatoR object including targets. method character specifying type embedding. One c(\"counts\",\"ppmi\",\"ppmi-svd\",\"huggingface\"). Default \"ppmi-svd\". min_count integer value specifying minimum response count responses considered embedding method = c(\"counts\",\"ppmi\",\"ppmi-svd\"). Default 5. n_dim integer value specifying number dimensions generated method = \"ppmi-svd\". Default 300. model character specifying model label. Must match name huggingface.co/models. token character string specifying access token hugging face API. Must obtained huggingface.co/inference-api. context optional character string specifying common lead text may help language model interpret associations. Defaults \"Free association: \"","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_embed_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Embed associations — ar_embed_targets","text":"function returns associatoR object including new  matrix element called target_embeddings containing target embeddings.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_embed_targets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Embed associations — ar_embed_targets","text":"Aeschbach, S., Mata, R., Wulff, D. U. (2024). associatoR. psyArXiv","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_embed_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Embed associations — ar_embed_targets","text":"","code":"ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") %>%   ar_embed_targets() #> Warning: 104 targets with count < min_count were dropped from embedding. #> Warning: all singular values are requested, svd() is used instead #>  #> ── An associatoR object ──────────────────────────────────────────────────────── #>  #> participants #> # A tibble: 1,000 × 3 #>      id gender education   #>   <dbl> <chr>  <chr>       #> 1     1 female high school #> 2     2 female high school #> 3     3 female high school #> 4     4 female high school #> 5     5 female high school #> # ℹ 995 more rows #>  #> cues #> # A tibble: 359 × 1 #>   cue          #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>  #> responses #> # A tibble: 29,820 × 5 #>      id cue          response  response_position response_level #>   <dbl> <chr>        <chr>                 <dbl>          <dbl> #> 1     1 intelligence brain                     1              1 #> 2     1 intelligence knowledge                 2              1 #> 3     1 intelligence wisdom                    3              1 #> 4     1 intelligence iq                        4              1 #> 5     1 intelligence learning                  5              1 #> # ℹ 29,815 more rows #>  #> targets #> # A tibble: 359 × 1 #>   target       #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>  #> target_embedding #> # A tibble: 255 × 256 #>   target      dim_1  dim_2   dim_3  dim_4  dim_5   dim_6 dim_7   dim_8 #>   <chr>       <dbl>  <dbl>   <dbl>  <dbl>  <dbl>   <dbl> <dbl>   <dbl> #> 1 intelligen… -4.31  0.841 -0.244  -0.253  0.515   0.376  1.51  -0.732 #> 2 brain       -5.58 -4.55  -1.50   -5.54   8.14   14.0    8.68   5.47  #> 3 knowledge   -6.43 -1.88   1.40    7.17  -2.78    3.22   1.43   0.274 #> 4 wisdom      -6.92 -1.42  -0.0408  3.92   4.47    2.63  -3.88  -0.942 #> 5 iq          -7.21 -2.86   1.64   -2.56   4.54  -10.7   18.8  -10.4   #> # ℹ 250 more rows #> # ℹ 247 more variables: dim_9 <dbl>, dim_10 <dbl>, dim_11 <dbl>, #> #   dim_12 <dbl>, dim_13 <dbl>, dim_14 <dbl>, dim_15 <dbl>, #> #   dim_16 <dbl>, dim_17 <dbl>, dim_18 <dbl>, dim_19 <dbl>, #> #   dim_20 <dbl>, dim_21 <dbl>, dim_22 <dbl>, dim_23 <dbl>, #> #   dim_24 <dbl>, dim_25 <dbl>, dim_26 <dbl>, dim_27 <dbl>, #> #   dim_28 <dbl>, dim_29 <dbl>, dim_30 <dbl>, dim_31 <dbl>, … #>"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_export_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Join all associatoR tibbles into one — ar_export_all","title":"Join all associatoR tibbles into one — ar_export_all","text":"Join associatoR tibbles one","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_export_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join all associatoR tibbles into one — ar_export_all","text":"","code":"ar_export_all(associations)"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_export_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join all associatoR tibbles into one — ar_export_all","text":"associations associatoR object containing association data generated ar_import.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_export_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join all associatoR tibbles into one — ar_export_all","text":"tibble containing joined data associations.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Import association data — ar_import","title":"Import association data — ar_import","text":"ar_import processes tabular association data associatoR object.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import association data — ar_import","text":"","code":"ar_import(   data,   participant,   cue,   response,   participant_vars = NULL,   cue_vars = NULL,   response_vars = NULL )"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import association data — ar_import","text":"data data.frame tibble containing association data. participant variable name data identifying participants. cue variable name data character string identifying cue(s). response variable name data identifying responses. participant_vars optional variable names data identifying participant attributes (e.g., demographics). cue_vars optional variable names data identifying cue attributes. response_vars optional variable names data  identifying response attributes.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import association data — ar_import","text":"Returns associatoR object containing list tibbles: participants tibble participants including participant id potential participant attributes. cues tibble cues including cue variable potential cue attributes. responses tibble responses including participant id, cues, responses, response level, additional response attributes.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_import.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import association data — ar_import","text":"Aeschbach, S., Mata, R., Wulff, D. U. (progress)","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_import.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import association data — ar_import","text":"","code":"ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) #>  #> ── An associatoR object ──────────────────────────────────────────────────────── #>  #> participants #> # A tibble: 1,000 × 3 #>      id gender education   #>   <dbl> <chr>  <chr>       #> 1     1 female high school #> 2     2 female high school #> 3     3 female high school #> 4     4 female high school #> 5     5 female high school #> # ℹ 995 more rows #>  #> cues #> # A tibble: 359 × 1 #>   cue          #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>  #> responses #> # A tibble: 29,820 × 5 #>      id cue          response  response_position response_level #>   <dbl> <chr>        <chr>                 <dbl>          <dbl> #> 1     1 intelligence brain                     1              1 #> 2     1 intelligence knowledge                 2              1 #> 3     1 intelligence wisdom                    3              1 #> 4     1 intelligence iq                        4              1 #> 5     1 intelligence learning                  5              1 #> # ℹ 29,815 more rows #>"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize responses — ar_normalize","title":"Normalize responses — ar_normalize","text":"ar_normalize performs normalization steps responses (cues) wraps around ar_normalize_manual.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize responses — ar_normalize","text":"","code":"ar_normalize(   associations,   case = \"lower\",   punct = \"end\",   punct_replacement = \" \",   whitespace = \"squish\",   process_cues = FALSE )"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize responses — ar_normalize","text":"associations associatoR object containing association data generated ar_import. case character specifying normalization cases NULL change casing. Must one c(\"lower\", \"upper\", \"sentence\", \"most_frequent\") NULL. Setting case = \"lower\" normalizes responses lower case, case = \"lower\" upper case, case = \"sentence\" sentence case, case = \"most_frequent\" frequent casing string. punct character specifying normalization punctuationor NULL change punctuation. Must one c(\"end\", \"\") NULL. punct = \"end\" replaces punctuation end (including following whitespaces) punct_replacement (default single white space). punct = \"\" replaces punctuation. punct_replacement character used replacement punctuation. whitespace character specifying normalization white spaces NULL change whitespace. Must one c(\"squish\", \"trim\") NULL. Setting whitespace = \"squish\" removes additional white spaces start, end, -words, whereas setting whitespace = \"trim\" removes white space start end. process_cues logical specifying, cues processed well. Defaults FALSE.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize responses — ar_normalize","text":"Returns associatoR object containing list tibbles: participants tibble participants including participant id potential participant attributes. cues tibble cues including cue variable potential cue attributes. responses tibble responses including participant id, cues, responses, response level, additional response attributes.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_normalize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Normalize responses — ar_normalize","text":"Aeschbach, S., Mata, R., Wulff, D. U. (progress)","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_normalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize responses — ar_normalize","text":"","code":"ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_normalize(case = \"lower\", punct = \"all\") #>  #> ── An associatoR object ──────────────────────────────────────────────────────── #>  #> participants #> # A tibble: 1,000 × 3 #>      id gender education   #>   <dbl> <chr>  <chr>       #> 1     1 female high school #> 2     2 female high school #> 3     3 female high school #> 4     4 female high school #> 5     5 female high school #> # ℹ 995 more rows #>  #> cues #> # A tibble: 359 × 1 #>   cue          #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>  #> responses #> # A tibble: 29,820 × 5 #>      id cue          response  response_position response_level #>   <dbl> <chr>        <chr>                 <dbl>          <dbl> #> 1     1 intelligence brain                     1              1 #> 2     1 intelligence knowledge                 2              1 #> 3     1 intelligence wisdom                    3              1 #> 4     1 intelligence iq                        4              1 #> 5     1 intelligence learning                  5              1 #> # ℹ 29,815 more rows #>"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_normalize_manual.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize responses manually — ar_normalize_manual","title":"Normalize responses manually — ar_normalize_manual","text":"ar_normalize_manual offers interface add self-defined normalization steps responses (cues) associatoR objects.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_normalize_manual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize responses manually — ar_normalize_manual","text":"","code":"ar_normalize_manual(associations, fun, ..., process_cues = FALSE)"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_normalize_manual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize responses manually — ar_normalize_manual","text":"associations associatoR object containing association data generated ar_import. fun vectorized function applied responses cues response matrix, excluding cues exist . ... additional arguments passed fun. process_cues logical indicating cues processed (.e. changed fun) .","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_normalize_manual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize responses manually — ar_normalize_manual","text":"Returns associatoR object containing list tibbles: participants tibble participants including participant id potential participant attributes. cues tibble cues including cue variable potential cue attributes. responses tibble responses including participant id, cues, responses, response level, additional response attributes. responses passed fun","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_normalize_manual.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Normalize responses manually — ar_normalize_manual","text":"Aeschbach, S., Mata, R., Wulff, D. U. (progress)","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_normalize_manual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize responses manually — ar_normalize_manual","text":"","code":"ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_normalize_manual(trimws, which = \"left\") #>  #> ── An associatoR object ──────────────────────────────────────────────────────── #>  #> participants #> # A tibble: 1,000 × 3 #>      id gender education   #>   <dbl> <chr>  <chr>       #> 1     1 female high school #> 2     2 female high school #> 3     3 female high school #> 4     4 female high school #> 5     5 female high school #> # ℹ 995 more rows #>  #> cues #> # A tibble: 359 × 1 #>   cue          #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>  #> responses #> # A tibble: 29,820 × 5 #>      id cue          response  response_position response_level #>   <dbl> <chr>        <chr>                 <dbl>          <dbl> #> 1     1 intelligence brain                     1              1 #> 2     1 intelligence knowledge                 2              1 #> 3     1 intelligence wisdom                    3              1 #> 4     1 intelligence iq                        4              1 #> 5     1 intelligence learning                  5              1 #> # ℹ 29,815 more rows #>"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_project_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Project embeddings — ar_project_embedding","title":"Project embeddings — ar_project_embedding","text":"ar_project generates 2D projection target embedding.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_project_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project embeddings — ar_project_embedding","text":"","code":"ar_project_embedding(associations, method = \"umap\", n_dim = 2, ...)"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_project_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project embeddings — ar_project_embedding","text":"associations associatoR object including targets. method character specifying type projection. One c(\"mds\", \"umap\"). Default \"umap\". n_dim integer specifying number projection dimensions. Default 2. ... additional parguments passed projection method.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_project_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project embeddings — ar_project_embedding","text":"function returns associatoR object  target_embeddings overwritten projected embeddings.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_project_embedding.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Project embeddings — ar_project_embedding","text":"Aeschbach, S., Mata, R., Wulff, D. U. (2024). associatoR. psyArXiv","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_project_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project embeddings — ar_project_embedding","text":"","code":"ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") %>%   ar_embed_targets() %>%   ar_project_embedding() #> Warning: 104 targets with count < min_count were dropped from embedding. #> Warning: all singular values are requested, svd() is used instead #>  #> ── An associatoR object ──────────────────────────────────────────────────────── #>  #> participants #> # A tibble: 1,000 × 3 #>      id gender education   #>   <dbl> <chr>  <chr>       #> 1     1 female high school #> 2     2 female high school #> 3     3 female high school #> 4     4 female high school #> 5     5 female high school #> # ℹ 995 more rows #>  #> cues #> # A tibble: 359 × 1 #>   cue          #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>  #> responses #> # A tibble: 29,820 × 5 #>      id cue          response  response_position response_level #>   <dbl> <chr>        <chr>                 <dbl>          <dbl> #> 1     1 intelligence brain                     1              1 #> 2     1 intelligence knowledge                 2              1 #> 3     1 intelligence wisdom                    3              1 #> 4     1 intelligence iq                        4              1 #> 5     1 intelligence learning                  5              1 #> # ℹ 29,815 more rows #>  #> targets #> # A tibble: 359 × 1 #>   target       #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>  #> target_embedding #> # A tibble: 255 × 3 #>   target        dim_1  dim_2 #>   <chr>         <dbl>  <dbl> #> 1 intelligence -1.06   1.14  #> 2 brain        -0.665  1.17  #> 3 knowledge     1.42   0.700 #> 4 wisdom        0.168 -0.594 #> 5 iq            2.04  -1.57  #> # ℹ 250 more rows #>"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_set_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Set analysis targets — ar_set_targets","title":"Set analysis targets — ar_set_targets","text":"ar_set_target defines analysis targets (cues /responses).","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_set_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set analysis targets — ar_set_targets","text":"","code":"ar_set_targets(associations, targets = c(\"cues\", \"responses\"))"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_set_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set analysis targets — ar_set_targets","text":"associations associatoR object containing association data generated ar_import. targets character containing either one c(\"cues\",\"responses\") gather targets columns vector manually selected targets.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_set_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set analysis targets — ar_set_targets","text":"Returns associatoR object containing list tibbles: participants tibble participants including participant id potential participant attributes. cues tibble cues including cue variable potential cue attributes. responses tibble responses including participant id, cues, responses, response level, additional response attributes. targets tibble targets including specified analysis target","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_set_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set analysis targets — ar_set_targets","text":"","code":"ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") #>  #> ── An associatoR object ──────────────────────────────────────────────────────── #>  #> participants #> # A tibble: 1,000 × 3 #>      id gender education   #>   <dbl> <chr>  <chr>       #> 1     1 female high school #> 2     2 female high school #> 3     3 female high school #> 4     4 female high school #> 5     5 female high school #> # ℹ 995 more rows #>  #> cues #> # A tibble: 359 × 1 #>   cue          #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>  #> responses #> # A tibble: 29,820 × 5 #>      id cue          response  response_position response_level #>   <dbl> <chr>        <chr>                 <dbl>          <dbl> #> 1     1 intelligence brain                     1              1 #> 2     1 intelligence knowledge                 2              1 #> 3     1 intelligence wisdom                    3              1 #> 4     1 intelligence iq                        4              1 #> 5     1 intelligence learning                  5              1 #> # ℹ 29,815 more rows #>  #> targets #> # A tibble: 359 × 1 #>   target       #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset associations — ar_subset","title":"Subset associations — ar_subset","text":"Subset associatoR object.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset associations — ar_subset","text":"","code":"ar_subset(associations, ...)"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset associations — ar_subset","text":"associations associatoR object containing association data generated ar_import. ... optional logical comparisons filtering participants, cues, responses. Multiple filter arguments combined logic.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset associations — ar_subset","text":"Returns associatoR object containing list tibbles: participants tibble participants including participant id potential participant attributes. cues tibble cues including cue variable potential cue attributes. responses tibble responses including participant id, cues, responses, response level, additional response attributes.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_subset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset associations — ar_subset","text":"Note ar_subset() resets associatoR object. Potential targets target_embedding tibbles removed added using ar_set_targets.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset associations — ar_subset","text":"","code":"ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_subset(gender == \"female\", education == \"high school\") #>  #> ── An associatoR object ──────────────────────────────────────────────────────── #>  #> participants #> # A tibble: 250 × 3 #>      id gender education   #>   <dbl> <chr>  <chr>       #> 1     1 female high school #> 2     2 female high school #> 3     3 female high school #> 4     4 female high school #> 5     5 female high school #> # ℹ 245 more rows #>  #> cues #> # A tibble: 207 × 1 #>   cue          #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 202 more rows #>  #> responses #> # A tibble: 7,430 × 5 #>      id cue          response  response_position response_level #>   <dbl> <chr>        <chr>                 <dbl>          <dbl> #> 1     1 intelligence brain                     1              1 #> 2     1 intelligence knowledge                 2              1 #> 3     1 intelligence wisdom                    3              1 #> 4     1 intelligence iq                        4              1 #> 5     1 intelligence learning                  5              1 #> # ℹ 7,425 more rows #>"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_summarize_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Add response variable summaries to targets — ar_summarize_targets","title":"Add response variable summaries to targets — ar_summarize_targets","text":"Add response variable summaries targets","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_summarize_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add response variable summaries to targets — ar_summarize_targets","text":"","code":"ar_summarize_targets(associations, response_var, fun = mean, ...)"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_summarize_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add response variable summaries to targets — ar_summarize_targets","text":"associations associatoR object containing association data generated ar_import. response_var variable responses tibble associatoR object. fun function used summarize response_vars target, defaults mean. ... additional parameters passed fun.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_summarize_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add response variable summaries to targets — ar_summarize_targets","text":"Returns associatoR object targets gains additional column including target summary calculated responses table's response_var using fun.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_summarize_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add response variable summaries to targets — ar_summarize_targets","text":"","code":"ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") %>%   ar_summarize_targets(response_position, fun = median) #>  #> ── An associatoR object ──────────────────────────────────────────────────────── #>  #> participants #> # A tibble: 1,000 × 3 #>      id gender education   #>   <dbl> <chr>  <chr>       #> 1     1 female high school #> 2     2 female high school #> 3     3 female high school #> 4     4 female high school #> 5     5 female high school #> # ℹ 995 more rows #>  #> cues #> # A tibble: 359 × 1 #>   cue          #>   <chr>        #> 1 intelligence #> 2 brain        #> 3 knowledge    #> 4 wisdom       #> 5 iq           #> # ℹ 354 more rows #>  #> responses #> # A tibble: 29,820 × 5 #>      id cue          response  response_position response_level #>   <dbl> <chr>        <chr>                 <dbl>          <dbl> #> 1     1 intelligence brain                     1              1 #> 2     1 intelligence knowledge                 2              1 #> 3     1 intelligence wisdom                    3              1 #> 4     1 intelligence iq                        4              1 #> 5     1 intelligence learning                  5              1 #> # ℹ 29,815 more rows #>  #> targets #> # A tibble: 359 × 2 #>   target       response_position #>   <chr>                    <dbl> #> 1 intelligence                 3 #> 2 brain                        1 #> 3 knowledge                    3 #> 4 wisdom                       3 #> 5 iq                           2 #> # ℹ 354 more rows #>"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_wordlist_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export wordlist — ar_wordlist_export","title":"Export wordlist — ar_wordlist_export","text":"ar_wordlist_export() exports table responses manual spelling correction.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_wordlist_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export wordlist — ar_wordlist_export","text":"","code":"ar_wordlist_export(associations, folder, file = \"wordlist_correction.csv\")"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_wordlist_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export wordlist — ar_wordlist_export","text":"associations associatoR object containing association data generated ar_import. folder character string specifying write table. file character string specifying filename. Default \"wordlist.csv\".","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_wordlist_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export wordlist — ar_wordlist_export","text":"Writes .CSV file hard drive.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_wordlist_export.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Export wordlist — ar_wordlist_export","text":"Aeschbach, S., Mata, R., Wulff, D. U. (preparation)","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_wordlist_export.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export wordlist — ar_wordlist_export","text":"","code":"ar_obj = ar_import(intelligence,                    participant = participant_id,                    cue = cue,                    response = response,                    participant_vars = c(gender, education),                    response_vars = c(response_position, response_level)) %>%   ar_normalize_manual(trimws, which = \"left\")  ar_wordlist_export(ar_obj)"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a csv file — ar_write_csv","title":"Write a csv file — ar_write_csv","text":"ar_write_csv() joins data associatoR object (except potential target embedding) one table writes table disk using write_csv.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a csv file — ar_write_csv","text":"","code":"ar_write_csv(associations, file, ...)"},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a csv file — ar_write_csv","text":"associations associatoR object containing association data generated ar_import. file character write . ... optional arguments passed readr::write_csv()","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a csv file — ar_write_csv","text":"ar_write_csv() returns joined associations tibble invisibly.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/ar_write_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a csv file — ar_write_csv","text":"","code":"ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(targets = \"cues\") %>%   ar_write_csv(file = \"intelligence.csv\")"},{"path":"http://samuelaeschbach.com/associatoR/reference/intelligence.html","id":null,"dir":"Reference","previous_headings":"","what":"GPT-4-generated free associations to 'intelligence' — intelligence","title":"GPT-4-generated free associations to 'intelligence' — intelligence","text":"data set free associations generated GPT-4. data set includes free associations cue word 'intelligence' (response_level == 1), well associations responses participant (response_level == 2). data set includes two participant covariables (gender education) simulated using respective system prompt generating data OpenAI's GPT-4.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/intelligence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GPT-4-generated free associations to 'intelligence' — intelligence","text":"","code":"intelligence"},{"path":"http://samuelaeschbach.com/associatoR/reference/intelligence.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GPT-4-generated free associations to 'intelligence' — intelligence","text":"`intelligence`: tibble 29,820 rows 7 coulumns: participant_id Unique id participant. gender Gender participant. education Education level participant cue Cue word trial. response Response given participant trial. response_position Position response given (1. response cue, 2. response cue, etc.). response_level Response level trial. (1: first-level response cue 'intelligence', 2: second-level response first-level responses participant cue).","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/intelligence.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GPT-4-generated free associations to 'intelligence' — intelligence","text":"https://doi.org","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/intelligence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GPT-4-generated free associations to 'intelligence' — intelligence","text":"Inspect use data calling intelligence R session.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/intelligence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GPT-4-generated free associations to 'intelligence' — intelligence","text":"Aeschbach, S., Mata, R., Wulff, D. U. (preparation). associatoR.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"http://samuelaeschbach.com/associatoR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/plot.associatoR.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot associations — plot.associatoR","title":"Plot associations — plot.associatoR","text":"Generate plot associatoR object.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/plot.associatoR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot associations — plot.associatoR","text":"","code":"# S3 method for associatoR plot(associations, facets = NULL, top_n = 5, ...)"},{"path":"http://samuelaeschbach.com/associatoR/reference/plot.associatoR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot associations — plot.associatoR","text":"associations associatoR object containing association data generated ar_import targets defined ar_set_targets. facets character vector variable names generate facets. top_n numeric scalar ... optional logical comparisons filter responses computing frequencies.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/plot.associatoR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot associations — plot.associatoR","text":"Returns associatoR object containing list tibbles: participants tibble participants including participant id potential participant attributes. cues tibble cues including cue variable potential cue attributes. responses tibble responses including participant id, cues, responses, response level, additional response attributes.","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/plot.associatoR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot associations — plot.associatoR","text":"","code":"ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(\"cues\") %>%   plot(facets = \"gender\", top_n = 10)   ar_import(intelligence,           participant = participant_id,           cue = cue,           response = response,           participant_vars = c(gender, education),           response_vars = c(response_position, response_level)) %>%   ar_set_targets(\"cues\") %>%   plot(facets = \"education\", top_n = 10, gender == \"female\")"},{"path":"http://samuelaeschbach.com/associatoR/reference/print.associatoR.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic print for class associatoR — print.associatoR","title":"Generic print for class associatoR — print.associatoR","text":"Generic print class associatoR","code":""},{"path":"http://samuelaeschbach.com/associatoR/reference/print.associatoR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic print for class associatoR — print.associatoR","text":"","code":"# S3 method for associatoR print(x, n = 5, ...)"},{"path":"http://samuelaeschbach.com/associatoR/reference/print.associatoR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic print for class associatoR — print.associatoR","text":"x object class associatoR n (optional) use print(n = ) show rows tibble. ... additional arguments passed print()","code":""}]
