% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/correlate.R
\name{ar_correlate_targets}
\alias{ar_correlate_targets}
\title{Correlate targets responses with participant variables}
\usage{
ar_correlate_targets(associations, participant_vars)
}
\arguments{
\item{associations}{an \code{associatoR} object containing association data as generated by \link[associatoR]{ar_import}.}

\item{participant_vars}{a \code{character} vector specifying the participant variables to assess. The variables must exist in \code{associations$participants}.}
}
\value{
Returns an \code{associatoR} object containing a list of tibbles, with \code{targets} gaining a \code{frequency} column:
\describe{
 \item{participants}{A tibble of participants including a participant \code{id} and potential participant attributes.}
 \item{cues}{A tibble of cues including a \code{cue} variable and potential cue attributes.}
 \item{responses}{A tibble of responses including a participant id, the cues, the responses, the response level, and additional response attributes.}
 \item{targets}{A tibble of targets including the specified analysis target}
}
}
\description{
\code{ar_correlate_targets} calculates the correlations between the response occurrence of \code{targets} and participant variables, such as gender or age.
}
\details{
Function calculates the point-biserial correlation for numeric and Cramer's V for categorical \code{participant_vars}.
}
\examples{

ar_import(ai_asso, participant = "id",
          response = "association_correct",
          cue_manual = "AI",
          participant_vars = c("age", "gender", "use", "expertise"),
          response_vars = c("association", "trial")) \%>\%
  ar_normalize() \%>\%
  ar_set_targets(target_set = "responses") \%>\%
  ar_count_targets()

}
