% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster.R
\name{ar_cluster_targets}
\alias{ar_cluster_targets}
\title{Cluster targets}
\usage{
ar_cluster_targets(
  associations,
  method = "louvain",
  similarity = "arccos",
  k = NULL,
  linkage = NULL,
  eps = NULL,
  ...
)
}
\arguments{
\item{associations}{an \code{associatoR} object including target_embeddings.}

\item{method}{a \code{character} specifying the clustering method. One of \code{c("louvain", "hclust", "kmeans", "dbscan")}. Default is \code{"louvain"}.}

\item{similarity}{a \code{character} specifying the similarity metric. One of \code{c("arccos", "cosine", "euclidean")}. Default is \code{"arccos"}.}

\item{k}{an \code{integer} specifying the number of clusters for \code{method = c("hclust", "kmeans")}.}

\item{linkage}{a \code{character} specifying the linkage criterion for \code{method = c("hclust")}. Default is \code{"complete"}.}

\item{eps}{a \code{numeric} specifying the point distance used in \code{method = c("dbscan")}.}

\item{...}{additional attributes passed on to the clustering method.}
}
\value{
The function returns the \code{associatoR} object including a new
  \code{clusters} column in \code{targets} containing the target clusters.
}
\description{
\code{ar_cluster_targets} produces a target clustering based on the associatoR object's target embedding.
}
\examples{
ar_import(intelligence,
          participant = participant_id,
          cue = cue,
          response = response,
          participant_vars = c(gender, education),
          response_vars = c(response_position, response_level)) \%>\%
  ar_set_targets(targets = "cues") \%>\%
  ar_embed_targets() \%>\%
  ar_cluster_targets(method = "louvain")

}
